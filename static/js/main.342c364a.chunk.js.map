{"version":3,"sources":["App.module.css","Components/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactListItem/ContactListItem.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","App.jsx","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","NotificationManager","error","className","styles","Form","this","Label","Label__text","Input","type","placeholder","onChange","Button","Component","ContactListItem","contact","key","onDeleteContact","id","onClick","Filter","ContactList","contacts","filter","toLowerCase","indexOf","map","App","allContacts","undefined","find","saveContact","warning","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","shortId","generate","AppText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.342c364a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__h9ZAW\",\"AppText\":\"App_AppText__3PTUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListItem\":\"ContactListItem_ContactListItem__SOWB3\",\"Button\":\"ContactListItem_Button__1xOdm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__2OH4q\"};","import React, { Component } from 'react';\nimport styles from './ContactForm.module.css';\nimport { NotificationManager } from 'react-notifications';\nimport T from 'prop-types';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onSubmit: T.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (!this.state.name) {\n      NotificationManager.error('Введите имя', 'Ошибка', 5000);\n\n      return;\n    }\n\n    this.props.onSubmit(this.state.name, this.state.number);\n    this.setState({ number: '', name: '' });\n  };\n  render() {\n    return (\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\n        <label className={styles.Label}>\n          <span className={styles.Label__text}>Name</span>\n          <input\n            className={styles.Input}\n            type=\"text\"\n            placeholder=\"Enter name\"\n            value={this.state.name}\n            name=\"name\"\n            onChange={this.handleChange}\n          />\n          <input\n            className={styles.Input}\n            type=\"number\"\n            placeholder=\"Enter number\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button className={styles.Button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './ContactListItem.module.css';\nimport T from 'prop-types';\n\nconst ContactListItem = ({ contact, key, onDeleteContact }) => {\n  const { name, number, id } = contact;\n\n  return (\n    <li className={styles.ContactListItem} key={key}>\n      <p className={styles.name}>\n        {name}: {number}\n      </p>\n      <button className={styles.Button} onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: T.shape({\n    name: T.string,\n    number: T.string,\n  }),\n};\n\nexport default ContactListItem;\n","import React, { Component } from 'react';\nimport styles from './Filter.module.css';\nimport T from 'prop-types';\n\nexport default class Filter extends Component {\n  static propTypes = {\n    handleChange: T.func,\n  };\n  render() {\n    return (\n      <section>\n        <input\n          className={styles.Input}\n          type=\"text\"\n          name=\"filter\"\n          value={this.props.value}\n          onChange={this.props.handleChange}\n        />\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport Filter from '../Filter/Filter';\nimport T from 'prop-types';\n\nexport default class ContactList extends Component {\n  static propTypes = {\n    onDeleteContact: T.func,\n    contacts: T.arrayOf(\n      T.shape({\n        id: T.string.isRequired,\n        name: T.string,\n        number: T.string,\n      }),\n    ),\n  };\n\n  state = { value: '' };\n\n  handleChange = ({ target }) => {\n    const { value } = target;\n\n    this.setState({ value: value });\n  };\n\n  render() {\n    return (\n      <>\n        <Filter handleChange={this.handleChange} />\n        <ul>\n          {this.props.contacts\n            .filter(contact => {\n              return (\n                contact.name\n                  .toLowerCase()\n                  .indexOf(this.state.value.toLowerCase()) >= 0\n              );\n            })\n            .map(contact => (\n              <ContactListItem\n                key={contact.id}\n                onDeleteContact={this.props.onDeleteContact}\n                contact={contact}\n              />\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport ContactForm from './Components/ContactForm/ContactForm';\n\nimport ContactList from './Components/ContactList/ContactList';\nimport shortId from 'shortid';\nimport 'react-notifications/lib/notifications.css';\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from 'react-notifications';\nimport allContacts from './contacts.json';\nimport T from 'prop-types';\n\nexport default class App extends Component {\n  static propTypes = {\n    allContacts: T.arrayOf(\n      T.shape({\n        id: T.string.isRequired,\n        name: T.string,\n        number: T.string,\n      }),\n    ),\n  };\n\n  state = {\n    contacts: allContacts,\n  };\n\n  componentDidMount() {\n    try {\n      const contacts = localStorage.getItem('contacts');\n      if (contacts) {\n        const parsedContacts = JSON.parse(contacts);\n\n        this.setState({ contacts: parsedContacts });\n      }\n    } catch (e) {}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  onSubmit = (name, number) => {\n    const { contacts } = this.state;\n    const find = contacts.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n\n    if (find !== undefined) {\n      NotificationManager.warning(\n        `${name} already exist`,\n        'Try another name',\n        3000,\n      );\n      return;\n    }\n\n    this.saveContact(name, number);\n  };\n\n  saveContact(name, number) {\n    const contact = {\n      id: shortId.generate(),\n      name: name,\n      number: number,\n    };\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  }\n\n  deleteContact = contactId => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <div className={styles.App}>\n        <h1 className={styles.AppText}>Phonebook</h1>\n        <ContactForm onSubmit={this.onSubmit} />\n        <h2 className={styles.AppText}>Contacts</h2>\n\n        <ContactList contacts={contacts} onDeleteContact={this.deleteContact} />\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"ContactForm_Label__2WtCm\",\"Label__text\":\"ContactForm_Label__text__3thcG\",\"Input\":\"ContactForm_Input__qAtGe\",\"Button\":\"ContactForm_Button__8YGqX\"};"],"sourceRoot":""}